---
name: Build
run-name: 'Build [${{ github.ref_name }}](${{ github.event_name }}) by ${{ github.actor }}'

on:
  push:
    branches:
      - master
      - cicd
    paths:
      - '*.yaml'
      - '*.yml'
      - '.github/workflows/build.yaml'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  packages: write
  pull-requests: write

jobs:
  build:
    name: 'Build ${{ matrix.yaml-file }}'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        yaml-file:
          - m5atom-s3.yaml
          - m5go.yaml
          - m5stack-timer-cam.yaml
          - esp32cam.yaml
#          - m5stick-plus.yaml
    env:
      VERSION: ''
      TZ: 'Asia/Baku'
      YAML: |
        ${{ secrets.SECRETS_YAML }}
    outputs:
      VERSION: ${{ steps.step-output.outputs.version }}
      FIRMWARE_NAME: ${{ steps.step-output.outputs.firmware_name }}
      SHA: ${{ steps.step-output.outputs.sha }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v5

      - name: 'Create secrets.yaml'
        run: |
          VERSION=dev-$(date +'%Y%m%d-%H%M')
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"
          echo "${{ env.YAML }}"  > ./secrets.yaml

      - name: 'Run action'
        uses: esphome/build-action@v6
        id: esphome-build
        with:
          yaml-file: ${{ matrix.yaml-file }}
          version: dev
          platform: linux/amd64
          release-summary: ''
          release-url: 'https://github.com/derskythe/esphome-playground'
          complete-manifest: true

      - name: 'Write version to file'
        run: |
          echo ${{ steps.esphome-build.outputs.version }} > ${{ steps.esphome-build.outputs.name }}/version

      - name: 'Upload ESPHome binary'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.esphome-build.outputs.name }}-${{ env.VERSION }}
          path: ${{ steps.esphome-build.outputs.name }}

      - name: "Output Values"
        id: step-output
        run: |
          echo "VERSION=${{ env.VERSION }}" >> "$GITHUB_ENV"
          echo "FIRMWARE_NAME=${{ steps.esphome-build.outputs.name }}" >> "$GITHUB_ENV"
          echo "SHA=$(git rev-parse --verify HEAD)" >> "$GITHUB_ENV"

      - name: 'Download files'
        uses: actions/download-artifact@v5
        with:
          name: ${{ env.FIRMWARE_NAME }}-${{ env.VERSION }}

      - name: 'List files'
        run: |-
          ls -al
          tree

      - name: '[ALL] Create or update RELEASE with assets ðŸŒŸ'
        shell: pwsh
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          $Arguments  = @( './', '${{ env.FIRMWARE_NAME }}', '${{ env.VERSION }}' )
          $Arguments += @( '${{ github.repository }}', '${{ github.ref_name }}', '${{ env.SHA }}' )
          ./.github/create-or-update-release.ps1 @Arguments
