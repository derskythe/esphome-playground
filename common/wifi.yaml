---
wifi:
  ssid: !secret wifi_ap
  password: !secret wifi_password
  enable_on_boot: 'true'
  fast_connect: 'true'
  power_save_mode: "${wifi_power_save_mode}"
  domain: ".skif.ws"
  reboot_timeout: 15min
  # Enable fallback hotspot (captive portal) in case Wi-Fi connection fails
  ap:
    ssid: '${friendly_name} Fallback Hotspot'
    password: !secret wifi_standalone_ap
    ap_timeout: 0s # Disable!
  on_connect:
    then:
      - logger.log:
          format: 'WiFi Connected!'
          level: INFO
      - globals.set:
          id: is_wifi_connected
          value: true
      - if:
          condition:
            lambda: |-
              return id(enable_wifi_led_status) == true;
          then:
            <<:
              !include {
                file: blink_led.yaml,
                vars:
                  {
                    led_id: led_strip,
                    repeat_count: 2,
                    brightness: 100%,
                    red: 0%,
                    green: 0%,
                    blue: 100%,
                    duration: 1s,
                    delay: 500ms,
                  },
              }
            # - rtttl.play:
            #     rtttl: !lambda 'return "scale_up:d=32,o=5,b=100:c,c#,d#,e,f#,g#,a#,b'
  on_disconnect:
    then:
      - logger.log:
          format: 'WiFi disconnected'
          level: WARN
      - globals.set:
          id: is_wifi_connected
          value: 'false'
      - if:
          condition:
            lambda: |-
              return id(enable_wifi_led_status) == true;
          then:
            <<:
              !include {
                file: blink_led.yaml,
                vars:
                  {
                    led_id: led_strip,
                    repeat_count: 2,
                    brightness: 50%,
                    red: 100%,
                    green: 0%,
                    blue: 0%,
                    duration: 1s,
                    delay: 500ms,
                  },
              }
        # - rtttl.play:
        #     rtttl: !lambda 'return "long:d=1,o=5,b=100:e6";'
