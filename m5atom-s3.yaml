---
substitutions:
  friendly_name: "M5_Atom_S3"
  entity_id: "m5atom-s3"
  wifi_power_save_mode: "none"
  enable_ota: "true"
  enable_wifi_led_status: "false"
  display_backlight: "display_backlight"

esphome:
  name: "${entity_id}"
  on_boot:
    priority: 800
    then:
      - logger.log:
          format: "${friendly_name} started"
          level: INFO

esp32:
  board: "esp32-s3-devkitc-1"
  variant: "esp32s3"
  framework:
    type: "arduino"

#######################################
## Global variables
#######################################
globals:
  - id: enable_wifi_led_status
    type: bool
    restore_value: "false"
    initial_value: "false"
  - id: is_api_connected
    type: bool
    restore_value: "false"
    initial_value: "false"
  - id: is_mqtt_connected
    type: bool
    restore_value: "false"
    initial_value: "false"
  - id: is_wifi_connected
    type: bool
    restore_value: "false"
    initial_value: "false"

#######################################
## Enable Home Assistant API
#######################################

packages:
  pkg_api: !include common/api.yaml
  pkg_ota: !include common/ota.yaml
  pkg_common: !include common/standard_mesh_idf.yaml
  pkg_wifi: !include common/wifi_simple.yaml
  pkg_mqtt: !include common/mqtt.yaml
  pkg_sensor: !include common/sensor_simple.yaml
  pkg_binary_sensor: !include common/binary_sensor.yaml
  pkg_text_sensor: !include common/text_sensor_simple.yaml
  pkg_switch: !include common/switch.yaml
  # Display
  pkg_font: !include common/font.yaml
  pkg_font_images: !include common/font_images.yaml

i2c:
  - id: bus_a
    sda: GPIO38
    scl: GPIO39

# GPIO pin of the display backlight
switch:
  - platform: gpio
    pin: GPIO16
    id: backlight
    name: "Backlight"
    restore_mode: ALWAYS_ON

sensor:
  - platform: mpu6886
    address: 0x68
    accel_x:
      name: "${friendly_name} MPU6886 Accel X"
    accel_y:
      name: "${friendly_name} MPU6886 Accel Y"
    accel_z:
      name: "${friendly_name} MPU6886 Accel z"
    gyro_x:
      name: "${friendly_name} MPU6886 Gyro X"
    gyro_y:
      name: "${friendly_name} MPU6886 Gyro Y"
    gyro_z:
      name: "${friendly_name} MPU6886 Gyro z"
    temperature:
      name: "${friendly_name} MPU6886 Temperature"

spi:
  clk_pin: GPIO17
  mosi_pin: GPIO21

display:
  - platform: ili9xxx
    id: main_display
    model: ST7789V
    cs_pin: GPIO15
    dc_pin: GPIO33
    reset_pin: GPIO34
    invert_colors: true
    update_interval: 1s
    dimensions:
      height: 128
      width: 128
      offset_height: 1
      offset_width: 2
    lambda: |-
      it.rectangle(0,  0, it.get_width(), it.get_height(), id(my_blue));
      it.rectangle(0, 20, it.get_width(), it.get_height(), id(my_blue));   // header bar

      it.strftime((128 / 2), (128 / 3) * 1 + 5, id(roboto_big), id(my_gray), TextAlign::CENTER, "%Y-%m-%d", id(esptime).now());
      it.strftime((128 / 2), (128 / 3) * 2 + 5, id(roboto_big), id(my_gray), TextAlign::CENTER, "%H:%M:%S", id(esptime).now());
      it.print(5, 5, id(roboto_small), id(my_yellow), TextAlign::TOP_LEFT, "ESPHome");

      // Comment out the above lines to see the image without text overlaid
      // it.image(0, 0, id(my_image));

      if (id(system_status).state) {
        it.print(115, 5, id(roboto_small), id(my_green), TextAlign::TOP_RIGHT, "Online");
      } else {
        it.print(115, 5, id(roboto_small), id(my_red), TextAlign::TOP_RIGHT, "Offline");
      }


#G41=Button
binary_sensor:
  - platform: gpio
    name: "Button A"
    pin:
      number: GPIO41
      inverted: true
      mode:
        input: true
        pullup: true
    filters:
      - delayed_off: 10ms
    on_press:
      then:
        - logger.log: "Button A Pressed"
